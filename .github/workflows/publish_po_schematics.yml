name: PO-UI Publish SCHEMATICS

# URL para os pacotes po-ui no npm
env:
  SCHEMATICS_NPM_PATH: domingues-ng-schematics
  WORKING_DIR: /home/runner/work/po-angular/po-angular/po-angular

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:

    - name: Check out po-angular
      uses: actions/checkout@v4
      with:
        path: po-angular

    - name: Check out style
      uses: actions/checkout@v4
      with:
        repository: po-ui/po-style
        path: po-style

    - name: Check out lint
      uses: actions/checkout@v4
      with:
        repository: po-ui/po-tslint
        path: po-tslint

    - name: Install and Build
      run: npm install && npm run build:schematics
      working-directory: ${{env.WORKING_DIR}}

    # Pega a última versão dos pacotes publicados no npm e armazena em variáveis
    - run: echo "SCHEMATICS_LAST_PUBLISHED_VERSION=$(npm view @${{ env.SCHEMATICS_NPM_PATH }} dist-tags.next)" >> $GITHUB_ENV
    
    # Pega a versão no package.json
    - name: Get package.json version.
      id: package-version
      uses: martinbeentjes/npm-get-version-action@main
      with:
        path: po-angular
    
    - name: ng-schematics - publish
      uses: actions/checkout@v4
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v4
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - run: npm publish --ignore-scripts
        working-directory: ${{env.WORKING_DIR}}
        env:
          PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # # PUBLISH NG-SCHEMATICS
    # - name: ng-schematics - publish
    #   # Se a versão remota for igual à versão que será publicada então ele pula o publish deste pacote e tenta publicar os demais pacotes
    #   # if: (!contains(env.PACKAGE_VERSION, env.SCHEMATICS_LAST_PUBLISHED_VERSION))
    #   run: npm publish dist/ng-schematics --ignore-scripts
    #   working-directory: ${{env.WORKING_DIR}}
    #   env:
    #     PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
    #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    # - name: ng-schematics - add "latest" tag

    #   # if: (!contains(env.PACKAGE_VERSION, env.SCHEMATICS_LAST_PUBLISHED_VERSION) && !contains(env.PACKAGE_VERSION, '-next') && !contains(env.PACKAGE_VERSION, '-rc'))
    #   run: npm dist-tags add @${{ env.SCHEMATICS_NPM_PATH }}@${{ env.PACKAGE_VERSION }}
    #   working-directory: ${{env.WORKING_DIR}}
    #   env:
    #     PACKAGE_VERSION: ${{ steps.package-version.outputs.current-version }}
    #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}